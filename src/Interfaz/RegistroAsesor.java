/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import BaseDatos.AsesorDBHelper;
import Clases.Asesor;
import java.awt.Color;
import java.sql.Time;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Parker
 */
public class RegistroAsesor extends javax.swing.JFrame {
    Color colorCorrecto;
    Color colorIncorrecto;
    /**
     * Creates new form RegistroAsesor
     */
    public RegistroAsesor() {
        initComponents();
        Inicio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtAtras = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTxtFNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTxtFApPaterno = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTxtFApMaterno = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPasswordField = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTxtFEmail = new javax.swing.JTextField();
        jTxtFCubiculo = new javax.swing.JTextField();
        jBtAceptar = new javax.swing.JButton();
        jSpnHrInicio = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jSpnMinInicio = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSpnHrFin = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jSpnMinFin = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro de asesor");

        jBtAtras.setText("Atrás");
        jBtAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAtrasActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre");

        jTxtFNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtFNombreKeyReleased(evt);
            }
        });

        jLabel2.setText("Apellido Paterno");

        jTxtFApPaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtFApPaternoKeyReleased(evt);
            }
        });

        jLabel3.setText("Apellido Materno");

        jTxtFApMaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtFApMaternoKeyReleased(evt);
            }
        });

        jLabel12.setText("Contraseña");

        jPasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordFieldKeyReleased(evt);
            }
        });

        jLabel4.setText("Cubículo");

        jLabel5.setText("Correo electrónico");

        jLabel6.setText("Horario de ");

        jTxtFEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtFEmailKeyReleased(evt);
            }
        });

        jTxtFCubiculo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtFCubiculoKeyReleased(evt);
            }
        });

        jBtAceptar.setText("Aceptar");
        jBtAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAceptarActionPerformed(evt);
            }
        });

        jSpnHrInicio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpnHrInicioStateChanged(evt);
            }
        });

        jLabel7.setText(":");

        jLabel8.setText("asesorías (24hr)");

        jLabel9.setText("De");

        jLabel10.setText("a");

        jLabel11.setText(":");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jBtAceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtAtras))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTxtFApPaterno)
                                    .addComponent(jTxtFNombre)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jSpnHrInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jSpnHrFin, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jSpnMinFin, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jSpnMinInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jTxtFEmail)
                                    .addComponent(jTxtFCubiculo)
                                    .addComponent(jPasswordField)
                                    .addComponent(jTxtFApMaterno))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTxtFNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTxtFApPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTxtFApMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTxtFCubiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTxtFEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpnHrInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(jSpnMinInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpnHrFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(jSpnMinFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10))
                    .addComponent(jLabel8))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtAtras)
                    .addComponent(jBtAceptar))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAtrasActionPerformed
        IniciarSesion ventana = new IniciarSesion();
        ventana.setLocationRelativeTo(this);
        ventana.show();
        this.dispose();
    }//GEN-LAST:event_jBtAtrasActionPerformed

    private void jBtAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAceptarActionPerformed
        //Se crea la conexión a la base de datos.
        AsesorDBHelper helper = new AsesorDBHelper();

        //Se capturan todos los datos ingresados.
        String nombre = jTxtFNombre.getText().toUpperCase();
        String apellidoPaterno = jTxtFApPaterno.getText().toUpperCase();
        String apellidoMaterno = jTxtFApMaterno.getText().toUpperCase();
        String contrasena = jPasswordField.getText();
        String cubiculo = jTxtFCubiculo.getText().toUpperCase();
        String email = jTxtFEmail.getText();
        int hrSpinnerInicio = Integer.parseInt(jSpnHrInicio.getValue().toString());
        int minSpinnerInicio = Integer.parseInt(jSpnMinInicio.getValue().toString());
        Time hrInicio = new Time(hrSpinnerInicio, minSpinnerInicio, 0);
        int hrSpinnerFin = Integer.parseInt(jSpnHrFin.getValue().toString());
        int minSpinnerFin = Integer.parseInt(jSpnMinFin.getValue().toString());
        Time hrFin = new Time(hrSpinnerFin, minSpinnerFin, 0);

        //Se crea un objeto asesor para guardarlo en la base de datos.
        Asesor asesor = new Asesor(nombre, apellidoPaterno, apellidoMaterno, contrasena);
        asesor.setCubiculo(cubiculo);
        asesor.setEmail(email);
        asesor.setHrInicioAsesoria(hrInicio);
        asesor.setHrFinAsesoria(hrFin);

        //Se guarda al asesor en la base de datos y se muestra un mensaje si fue exitosa o no la transacción.
        if(helper.Registrar(asesor)){
            JOptionPane.showMessageDialog(this, "Estas registrado en el sistema", "Registro exitosamente", JOptionPane.INFORMATION_MESSAGE);
            
            //se recupera el id del asesor registrado.
            asesor.setId(helper.getIdAsesor(asesor));
            
            //Se pasa a la ventana "Perfil Asesor" con el asesor registrado.
            PerfilAsesor ventana = new PerfilAsesor();
            ventana.setAsesor(asesor);
            ventana.setLocationRelativeTo(this);
            ventana.show();
            this.dispose();
            return;
        }

        JOptionPane.showMessageDialog(this, "Error en el sistema", "Registro fallido", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jBtAceptarActionPerformed

    private void jTxtFNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFNombreKeyReleased
        String  cadena =  jTxtFNombre.getText();
        boolean verificacion = Validacion.Validacion.SoloNombres(cadena);
        
        //Si es un nombre poner el fondo de la caja de texto.
        if(verificacion){
            ColorText(colorCorrecto, jTxtFNombre);
            return;
        }
        
        //De lo contrario ponerlo colorIncorrercto.  
        ColorText(colorIncorrecto, jTxtFNombre);
    }//GEN-LAST:event_jTxtFNombreKeyReleased

    private void jTxtFApPaternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFApPaternoKeyReleased
        String  cadena =  jTxtFApPaterno.getText();
        boolean verificacion = Validacion.Validacion.SoloLetras(cadena);
        
        //Si es un apellido poner el fondo de la caja de texto.
        if(verificacion){
            ColorText(colorCorrecto, jTxtFApPaterno);
            return;
        }
        
        //De lo contrario ponerlo colorIncorrercto.  
        ColorText(colorIncorrecto, jTxtFApPaterno);
    }//GEN-LAST:event_jTxtFApPaternoKeyReleased

    private void jTxtFApMaternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFApMaternoKeyReleased
        String  cadena =  jTxtFApMaterno.getText();
        boolean verificacion = Validacion.Validacion.SoloLetras(cadena);
        
        //Si es un apellido poner el fondo de la caja de texto.
        if(verificacion){
            ColorText(colorCorrecto, jTxtFApMaterno);
            return;
        }
        
        //De lo contrario ponerlo colorIncorrercto.
        ColorText(colorIncorrecto, jTxtFApMaterno);
    }//GEN-LAST:event_jTxtFApMaternoKeyReleased

    private void jTxtFCubiculoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFCubiculoKeyReleased
        String  cadena =  jTxtFCubiculo.getText();
        boolean verificacion = Validacion.Validacion.SoloCubiculo(cadena);
        
        //Si es cubiculo poner el fondo de la caja de texto.
        if(verificacion){
            ColorText(colorCorrecto, jTxtFCubiculo);
            return;
        }
        
        //De lo contrario ponerlo colorIncorrercto.
        ColorText(colorIncorrecto, jTxtFCubiculo);
    }//GEN-LAST:event_jTxtFCubiculoKeyReleased

    private void jTxtFEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtFEmailKeyReleased
        String  cadena =  jTxtFEmail.getText();
        boolean verificacion = Validacion.Validacion.SoloEmail(cadena);
        
        //Si es cubiculo poner el fondo de la caja de texto.
        if(verificacion){
            ColorText(colorCorrecto, jTxtFEmail);
            return;
        }
        
        //De lo contrario ponerlo colorIncorrercto.
        ColorText(colorIncorrecto, jTxtFEmail);
    }//GEN-LAST:event_jTxtFEmailKeyReleased

    private void jPasswordFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordFieldKeyReleased
        String  cadena =  jPasswordField.getText();        
        Pattern pat = Pattern.compile("[\\s]");
        Matcher mat = pat.matcher(cadena);
        
        //Si la contraseña no contiene espacio sponer el fondo de la caja de texto.
        if(!(cadena.equals("") || mat.find())){
            ColorText(colorCorrecto, jPasswordField);
            return;
        }
        
        //De lo contrario ponerlo colorIncorrercto.
        ColorText(colorIncorrecto, jPasswordField);
    }//GEN-LAST:event_jPasswordFieldKeyReleased

    private void jSpnHrInicioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpnHrInicioStateChanged
        jSpnHrFin.setValue(jSpnHrInicio.getValue());
    }//GEN-LAST:event_jSpnHrInicioStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroAsesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroAsesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroAsesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroAsesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroAsesor().setVisible(true);
            }
        });
    }
    
    /*
    * Funcion que pone los valores por defecto
    */
    private void Inicio(){
        //Se pone el formato de 24hr en los jSpinner
        SpinnerNumberModel spinnerHr;
        SpinnerNumberModel spinnerMin;
        int hrMinimo = 0;
        int hrMaximo = 23;
        int minMinimo = 0;
        int minMaximo = 59;
        
        spinnerHr = new SpinnerNumberModel(hrMinimo, hrMinimo, hrMaximo, 1);
        jSpnHrInicio.setModel(spinnerHr);
        spinnerMin = new SpinnerNumberModel(minMinimo, minMinimo, minMaximo, 1);
        jSpnMinInicio.setModel(spinnerMin);
        spinnerHr = new SpinnerNumberModel(hrMinimo, hrMinimo, hrMaximo, 1);
        jSpnHrFin.setModel(spinnerHr);
        spinnerMin = new SpinnerNumberModel(minMinimo, minMinimo, minMaximo, 1);
        jSpnMinFin.setModel(spinnerMin);
        
        jBtAceptar.setEnabled(false);
        colorCorrecto = Color.decode("#CBEE93");
        colorIncorrecto = Color.decode("#F02121");
    }
    
    /*
    * Cambia el color del borde de una caja de texto.
    * si el color es rojo, el boton "Aceptar" se inhabilita.
    */
    private void ColorText(Color color, JTextField text){
//        text.setBorder(BorderFactory.createLineBorder(color, 1));
        text.setBackground(color);
//        boolean valNombre = jTxtFNombre.getBackground() ==  Color.RED;
//        boolean valApPaterno = jTxtFApPaterno.getBackground() ==  Color.RED;
//        boolean valApMaterno = jTxtFApMaterno.getBackground() ==  Color.RED;
//        boolean valContrasena = jPasswordField.getBackground() ==  Color.RED;
//        boolean valCubiculo = jTxtFCubiculo.getBackground() ==  Color.RED;
//        boolean valEmail = jTxtFEmail.getBackground() ==  Color.RED;
//        
////        jBtAceptar.setEnabled(!(color == Color.RED));
//        boolean validacion = valNombre || valApPaterno || valApMaterno || valContrasena || valCubiculo || valEmail;
//        jBtAceptar.setEnabled(!validacion);
//        boolean valNombre = jTxtFNombre.getBackground() ==  colorCorrecto;
//        boolean valApPaterno = jTxtFApPaterno.getBackground() ==  colorCorrecto;
//        boolean valApMaterno = jTxtFApMaterno.getBackground() ==  colorCorrecto;
//        boolean valContrasena = jPasswordField.getBackground() ==  colorCorrecto;
//        boolean valCubiculo = jTxtFCubiculo.getBackground() ==  colorCorrecto;
//        boolean valEmail = jTxtFEmail.getBackground() ==  colorCorrecto;
//        
//        boolean validacion = valNombre && valApPaterno && valApMaterno && valContrasena && valCubiculo && valEmail;

        boolean validacion = jTxtFNombre.getBackground() ==  colorCorrecto;
        validacion = validacion && jTxtFApPaterno.getBackground() ==  colorCorrecto;
        validacion = validacion && jTxtFApMaterno.getBackground() ==  colorCorrecto;
        validacion = validacion && jPasswordField.getBackground() ==  colorCorrecto;
        validacion = validacion && jTxtFCubiculo.getBackground() ==  colorCorrecto;
        validacion = validacion && jTxtFEmail.getBackground() ==  colorCorrecto;
                
        jBtAceptar.setEnabled(validacion);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAceptar;
    private javax.swing.JButton jBtAtras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JSpinner jSpnHrFin;
    private javax.swing.JSpinner jSpnHrInicio;
    private javax.swing.JSpinner jSpnMinFin;
    private javax.swing.JSpinner jSpnMinInicio;
    private javax.swing.JTextField jTxtFApMaterno;
    private javax.swing.JTextField jTxtFApPaterno;
    private javax.swing.JTextField jTxtFCubiculo;
    private javax.swing.JTextField jTxtFEmail;
    private javax.swing.JTextField jTxtFNombre;
    // End of variables declaration//GEN-END:variables
}
